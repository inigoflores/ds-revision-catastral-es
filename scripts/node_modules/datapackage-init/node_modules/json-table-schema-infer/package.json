{
  "name": "json-table-schema-infer",
  "version": "0.1.0",
  "description": "Infer a JSON Table Schema from a readable stream of a CSV source",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/okfn/json-table-schema-infer.git"
  },
  "keywords": [
    "type",
    "inference",
    "csv",
    "JSON",
    "Table",
    "Schema"
  ],
  "author": {
    "name": "Rufus Pollock and Sebastien Ballesteros"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/okfn/json-table-schema-infer/issues"
  },
  "homepage": "https://github.com/okfn/json-table-schema-infer",
  "dependencies": {
    "binary-csv": "~0.1.6",
    "once": "~1.3.0"
  },
  "devDependencies": {
    "mocha": "~1.16.2"
  },
  "readme": "jts-infer\n=========\n\nInfer a\n[JSON Table Schema](http://dataprotocols.org/json-table-schema/) from\na readable stream of a\n[CSV](http://en.wikipedia.org/wiki/Comma-separated_values) source\n\n\n[![NPM](https://nodei.co/npm/jts-infer.png)](https://nodei.co/npm/jts-infer/)\n\n\n#API\n\n##jtsInfer(readableStream, [options], callback)\n\n\n    var jtsInfer = require('jts-infer)\n      , fs = require('fs);\n\n    jtsInfer(fs.createReadStream('path/to/data.csv'), function(err, schema, scores){\n      //do something with schema [and scores]\n    });\n\n\n###Options\n\n- ```separator```: separator to separate cells in a row (default to ',')\n- ```newline```: separator to separate different rows (default to '\\n')\n- ```nSample```: if specified only the ```nSample``` first rows of the source will be used to infer the types otherwise all the rows will be used\n\n\n#Tests\n\n    npm test\n\n\n#License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "json-table-schema-infer@0.1.0",
  "_from": "json-table-schema-infer@"
}
