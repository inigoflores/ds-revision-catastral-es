{
  "name": "datapackage-init",
  "description": "Initialize and create Data Packages",
  "version": "0.2.3",
  "license": "MIT",
  "author": {
    "name": "Rufus Pollock",
    "email": "rufus.pollock@okfn.org"
  },
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/okfn/datapackage-init.git"
  },
  "bugs": {
    "url": "http://github.com/okfn/datapackage-init/issues"
  },
  "engines": [
    "node >= 0.6"
  ],
  "main": "./index",
  "dependencies": {
    "json-table-schema-infer": ""
  },
  "devDependencies": {
    "mocha": "",
    "rimraf": ""
  },
  "readme": "datapackage-init\n================\n\nCreate [Data Package][] datapackage.json files.\n\n[Data Package]: http://data.okfn.org/standards/data-package\n\n# Installation\n\n[![NPM](https://nodei.co/npm/datapackage-init.png)](https://nodei.co/npm/datapackage-init/)\n\n```\nnpm install datapackage-init\n```\n\n# Usage\n\nStart off by requiring the module as follows:\n\n```\nvar dpinit = require('datapackage-init');\n```\n\n## init\n\nCreate a datapackage.json at the path specified.\n\n```\ndpinit.init(path, callback(err, datapackageJson));\n```\n\n* `path`: path to where your data package is (will use this to search\n  for data to add, for an existing datapackage.json to update etc)\n\n## create\n\nCreate a Data Package JSON and return it in the callback.\n\n```\ndpinit.create(path_, callback(err, datapackageJson));\n```\n\n* `path`: path to where your data package data is located. This is used to\n  search for data to add, for an existing datapackage.json to update etc)\n\n\n## simpleDefaults\n\nGenerate simple defaults for a `datapackage.json`\n\n```\nvar defaults = dpinit.simpleDefaults();\n```\n\n## defaultsForLocalPackage\n\nGet defaults based on a local file-system data package\n\n```\ndpinit.defaultsForLocalPackage(path_, cb)\n```\n\n* `path_`: path to the data package directory\n\nDefaults here will include things like:\n\n- Generating a name based on the directory\n- Generating a description based on a README (if present)\n- Searching for data files (csv and geojson at present) and adding them to the\n  resources\n\n## createResourceEntry\n\n```\ndpinit.createResourceEntry(filepath, cb)\n```\n\nCreate a resource entry in a Data Package for file at `filepath` returning the\ndata in the callback.\n\n## createResourceEntries\n\n```\ndpinit.createResourceEntries(dir, cb)\n```\n\nCreate a set of resource entries for a Data Package for all suitable files in\n`dir` and its child directories.\n\n",
  "readmeFilename": "README.md",
  "_id": "datapackage-init@0.2.3",
  "_from": "datapackage-init@"
}
